/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-05-09 09:18:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleScoreServiceProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H1>Result</H1>\r\n");
      out.write("\r\n");
      DefaultNamespace.ScoreServiceProxy sampleScoreServiceProxyid = null;
      synchronized (session) {
        sampleScoreServiceProxyid = (DefaultNamespace.ScoreServiceProxy) _jspx_page_context.getAttribute("sampleScoreServiceProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleScoreServiceProxyid == null){
          sampleScoreServiceProxyid = new DefaultNamespace.ScoreServiceProxy();
          _jspx_page_context.setAttribute("sampleScoreServiceProxyid", sampleScoreServiceProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleScoreServiceProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
case 2:
        gotMethod = true;
        java.lang.String getEndpoint2mtemp = sampleScoreServiceProxyid.getEndpoint();
if(getEndpoint2mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 5:
        gotMethod = true;
        String endpoint_0id=  request.getParameter("endpoint8");
            java.lang.String endpoint_0idTemp = null;
        if(!endpoint_0id.equals("")){
         endpoint_0idTemp  = endpoint_0id;
        }
        sampleScoreServiceProxyid.setEndpoint(endpoint_0idTemp);
break;
case 10:
        gotMethod = true;
        DefaultNamespace.ScoreService getScoreService10mtemp = sampleScoreServiceProxyid.getScoreService();
if(getScoreService10mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getScoreService10mtemp );
      out.write('\r');
      out.write('\n');

}else{

      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("</TABLE>\r\n");

}
break;
case 27:
        gotMethod = true;
        sampleScoreServiceProxyid.reset();
break;
case 30:
        gotMethod = true;
        int getWins30mtemp = sampleScoreServiceProxyid.getWins();
        String tempResultreturnp31 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getWins30mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp31 );
      out.write("\r\n");
      out.write("        ");

break;
case 33:
        gotMethod = true;
        int getTies33mtemp = sampleScoreServiceProxyid.getTies();
        String tempResultreturnp34 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getTies33mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp34 );
      out.write("\r\n");
      out.write("        ");

break;
case 36:
        gotMethod = true;
        int getLosses36mtemp = sampleScoreServiceProxyid.getLosses();
        String tempResultreturnp37 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getLosses36mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp37 );
      out.write("\r\n");
      out.write("        ");

break;
case 39:
        gotMethod = true;
        String wins_1id=  request.getParameter("wins48");
        int wins_1idTemp  = Integer.parseInt(wins_1id);
        String losses_2id=  request.getParameter("losses50");
        int losses_2idTemp  = Integer.parseInt(losses_2id);
        String ties_3id=  request.getParameter("ties52");
        int ties_3idTemp  = Integer.parseInt(ties_3id);
        DefaultNamespace.Score updateScore39mtemp = sampleScoreServiceProxyid.updateScore(wins_1idTemp,losses_2idTemp,ties_3idTemp);
if(updateScore39mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(updateScore39mtemp );
      out.write('\r');
      out.write('\n');

}else{

      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">ties:</TD>\r\n");
      out.write("<TD>\r\n");

if(updateScore39mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(updateScore39mtemp.getTies()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">losses:</TD>\r\n");
      out.write("<TD>\r\n");

if(updateScore39mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(updateScore39mtemp.getLosses()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">wins:</TD>\r\n");
      out.write("<TD>\r\n");

if(updateScore39mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(updateScore39mtemp.getWins()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("</TABLE>\r\n");

}
break;
case 54:
        gotMethod = true;
        int increaseWins54mtemp = sampleScoreServiceProxyid.increaseWins();
        String tempResultreturnp55 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(increaseWins54mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp55 );
      out.write("\r\n");
      out.write("        ");

break;
case 57:
        gotMethod = true;
        DefaultNamespace.Score getScore57mtemp = sampleScoreServiceProxyid.getScore();
if(getScore57mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getScore57mtemp );
      out.write('\r');
      out.write('\n');

}else{

      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">ties:</TD>\r\n");
      out.write("<TD>\r\n");

if(getScore57mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getScore57mtemp.getTies()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">losses:</TD>\r\n");
      out.write("<TD>\r\n");

if(getScore57mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getScore57mtemp.getLosses()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">wins:</TD>\r\n");
      out.write("<TD>\r\n");

if(getScore57mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getScore57mtemp.getWins()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("</TABLE>\r\n");

}
break;
case 66:
        gotMethod = true;
        int increaseTies66mtemp = sampleScoreServiceProxyid.increaseTies();
        String tempResultreturnp67 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(increaseTies66mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp67 );
      out.write("\r\n");
      out.write("        ");

break;
case 69:
        gotMethod = true;
        int increaseLosses69mtemp = sampleScoreServiceProxyid.increaseLosses();
        String tempResultreturnp70 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(increaseLosses69mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp70 );
      out.write("\r\n");
      out.write("        ");

break;
}
} catch (Exception e) { 

      out.write("\r\n");
      out.write("Exception: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.toString()) );
      out.write("\r\n");
      out.write("Message: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()) );
      out.write('\r');
      out.write('\n');

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("result: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
